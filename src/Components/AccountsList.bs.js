// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

import * as Auth from "../Context/Auth.bs.js";
import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as React from "react";
import * as GlobalStyles from "../GlobalStyles.bs.js";
import * as Institutions from "../API/Institutions.bs.js";
import * as ReactNative from "react-native";
import * as Style$ReactNative from "reason-react-native/src/apis/Style.bs.js";
import * as VectorIcons from "@expo/vector-icons";

var styles = ReactNative.StyleSheet.create({
      container: {
        alignItems: "center",
        alignSelf: "stretch",
        flex: 1,
        flexDirection: "row",
        justifyContent: "space-between",
        padding: 10
      },
      button: {
        borderColor: GlobalStyles.colors[/* primary */1],
        borderRadius: 5,
        borderWidth: 2,
        marginTop: 25
      },
      image: {
        resizeMode: "contain",
        height: 40,
        width: Style$ReactNative.pct(20)
      },
      text: {
        fontSize: 24
      }
    });

function consentImage(status) {
  if (status !== 1) {
    if (status !== 5) {
      return null;
    } else {
      return React.createElement(VectorIcons.MaterialIcons, {
                  name: "refresh",
                  size: 32,
                  color: GlobalStyles.colors[/* warning */2]
                });
    }
  } else {
    return React.createElement(VectorIcons.MaterialIcons, {
                name: "check-circle",
                size: 24,
                color: GlobalStyles.colors[/* primary */1]
              });
  }
}

function AccountsList$Item(Props) {
  var name = Props.name;
  var image = Props.image;
  var status = Props.status;
  var institutionId = Props.institutionId;
  var navigation = Props.navigation;
  var match = React.useContext(Auth.context)[/* auth */0];
  var user = Auth.currentUserOrRaise(match[0]);
  return React.createElement(ReactNative.TouchableHighlight, {
              style: styles.button,
              underlayColor: GlobalStyles.colors[/* primary */1],
              onPress: (function (param) {
                  Institutions.authorise(user[/* uuid */4], institutionId).then((function (uri) {
                          return Promise.resolve((navigation.navigate("Webview", {
                                            uri: uri,
                                            bankName: name
                                          }), /* () */0));
                        }));
                  return /* () */0;
                }),
              children: React.createElement(ReactNative.View, {
                    style: styles.container,
                    children: null
                  }, React.createElement(ReactNative.Text, {
                        style: styles.text,
                        children: name
                      }), React.createElement(ReactNative.Text, {
                        children: consentImage(status)
                      }), React.createElement(ReactNative.Image, {
                        source: {
                          uri: image
                        },
                        style: styles.image
                      }))
            });
}

var Item = /* module */[
  /* styles */styles,
  /* consentImage */consentImage,
  /* make */AccountsList$Item
];

var styles$1 = ReactNative.StyleSheet.create({
      list_: {
        paddingBottom: 45
      },
      heading: {
        fontWeight: "bold",
        borderBottomColor: GlobalStyles.colors[/* primary */1],
        borderBottomWidth: 1,
        paddingBottom: 5
      }
    });

function AccountsList$List(Props) {
  var institutions = Props.institutions;
  var navigation = Props.navigation;
  var heading = Props.heading;
  var match = List.length(institutions) > 0;
  if (match) {
    return React.createElement(ReactNative.View, {
                style: styles$1.list_,
                children: null
              }, React.createElement(ReactNative.View, {
                    style: styles$1.heading,
                    children: React.createElement(ReactNative.Text, {
                          style: styles$1.heading,
                          children: heading
                        })
                  }), React.createElement(ReactNative.View, {
                    children: React.createElement(ReactNative.FlatList, {
                          data: $$Array.of_list(institutions),
                          keyExtractor: (function (param, param$1) {
                              return param[/* id */1];
                            }),
                          renderItem: (function (props) {
                              return React.createElement(AccountsList$Item, {
                                          name: props.item[/* name */2],
                                          image: List.hd(props.item[/* media */4])[/* source */0],
                                          status: props.item[/* consentStatus */0],
                                          institutionId: props.item[/* id */1],
                                          navigation: navigation
                                        });
                            }),
                          bounces: false
                        })
                  }));
  } else {
    return null;
  }
}

var List$1 = /* module */[
  /* styles */styles$1,
  /* make */AccountsList$List
];

export {
  Item ,
  List$1 as List,
  
}
/* styles Not a pure module */
