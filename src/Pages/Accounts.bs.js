// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

import * as Auth from "../Context/Auth.bs.js";
import * as List from "bs-platform/lib/es6/list.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as AccountsList from "../Components/AccountsList.bs.js";
import * as GlobalStyles from "../GlobalStyles.bs.js";
import * as Institutions from "../API/Institutions.bs.js";
import * as ReactNative from "react-native";
import * as LoadingScreen from "../Components/LoadingScreen.bs.js";
import * as Style$ReactNative from "reason-react-native/src/apis/Style.bs.js";

var styles = ReactNative.StyleSheet.create({
      listContainer: {
        justifyContent: "flex-start",
        padding: Style$ReactNative.pct(2.5)
      }
    });

function Accounts$List(Props) {
  var institutions = Props.institutions;
  var navigation = Props.navigation;
  var match = List.partition((function (i) {
          return i[/* consentStatus */0] === /* AwaitingAuthorization */0;
        }), institutions);
  var match$1 = List.partition((function (i) {
          return i[/* consentStatus */0] === /* Expired */5;
        }), match[1]);
  var expiredAuth = match$1[0];
  var match$2 = List.length(expiredAuth) === 0;
  return React.createElement(ReactNative.View, {
              style: /* array */[
                GlobalStyles.styles.fullWidthContainer,
                styles.listContainer
              ],
              children: null
            }, React.createElement(AccountsList.List[/* make */1], {
                  institutions: List.append(expiredAuth, match$1[1]),
                  navigation: navigation,
                  heading: match$2 ? "Accounts you've linked with Sumi" : String(List.length(expiredAuth)) + " of your accounts require reauthorisation"
                }), React.createElement(AccountsList.List[/* make */1], {
                  institutions: match[0],
                  navigation: navigation,
                  heading: " Select a bank to link it to your Sumi account "
                }));
}

var List$1 = /* module */[
  /* styles */styles,
  /* make */Accounts$List
];

function Accounts(Props) {
  var navigation = Props.navigation;
  var match = React.useState((function () {
          return /* Loading */0;
        }));
  var setInstitutions = match[1];
  var institutionsList = match[0];
  var fetchInstitutes = function (param) {
    Institutions.get(/* () */0).then((function (list_) {
              return Promise.resolve(Curry._1(setInstitutions, (function (param) {
                                return /* GotInstitutions */[list_];
                              })));
            })).catch((function (error) {
            console.log(error);
            return Promise.resolve(Curry._1(setInstitutions, (function (param) {
                              return /* AuthFailed */1;
                            })));
          }));
    return /* () */0;
  };
  React.useEffect((function () {
          fetchInstitutes(/* () */0);
          return (function (param) {
                    return /* () */0;
                  });
        }), ([]));
  React.useEffect((function () {
          if (institutionsList === /* AuthFailed */1) {
            Auth.logOut(navigation);
          }
          return (function (param) {
                    return /* () */0;
                  });
        }), /* array */[institutionsList]);
  if (typeof institutionsList === "number") {
    if (institutionsList !== 0) {
      return null;
    } else {
      return React.createElement(LoadingScreen.make, { });
    }
  } else {
    return React.createElement(Accounts$List, {
                institutions: institutionsList[0],
                navigation: navigation
              });
  }
}

Accounts.navigationOptions = {
  title: "Home",
  headerTitle: "Accounts",
  headerTitleStyle: {
    fontWeight: "bold"
  }
};

var make = Accounts;

export {
  List$1 as List,
  make ,
  
}
/* styles Not a pure module */
